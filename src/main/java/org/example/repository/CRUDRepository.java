package org.example.repository;

import java.util.List;

/**
 * Интерфейс для выполнения стандартных операций CRUD (Создание, Чтение, Обновление, Удаление)
 * над сущностями определенного типа.
 *
 * @param <T> тип сущности, с которой будет работать репозиторий.
 */
public interface CRUDRepository<T> {

    /**
     * Получить список всех сущностей.
     *
     * @return Список объектов типа {@code T}.
     */
    List<T> findAll();

    /**
     * Найти сущность по её идентификатору.
     *
     * @param id идентификатор сущности.
     * @return Объект типа {@code T}, если найден, иначе {@code null}.
     */
    T findById(int id);

    /**
     * Сохранить новую сущность в хранилище.
     *
     * @param entity объект типа {@code T}, который необходимо сохранить.
     * @return Сохраненный объект типа {@code T}.
     */
    T save(T entity);

    /**
     * Обновить существующую сущность в хранилище.
     *
     * @param entity объект типа {@code T} с обновленными данными.
     * @return Обновленный объект типа {@code T}.
     */
    T update(T entity);

    /**
     * Удалить сущность по её идентификатору.
     *
     * @param id идентификатор сущности для удаления.
     * @return {@code true}, если сущность успешно удалена, иначе {@code false}.
     */
    boolean delete(int id);
}
